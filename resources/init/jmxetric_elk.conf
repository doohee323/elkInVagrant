#!upstart
description "jmxetric"
author      "Dewey Hong"

# used to be: start on startup
# until we found some mounts weren't ready yet while booting:
start on runlevel [2345]
stop on runlevel [016]

# Automatically Respawn:
respawn
respawn limit 99 5

#modify limits
limit nofile 64000 64000

env PROJ_NAME=elk

script
    ulimit -n 65000
    # Not sure why $HOME is needed, but it is:
    
    cd /opt/$PROJ_NAME
	export config="host=MONITORNODE,port=8649,wireformat31x=true,config=/etc/jmxetric/$PROJ_NAME.xml,mode=multicast,process=$PROJ_NAME.jar"
	export JARS=gmetric4j-1.0.10.jar:oncrpc-1.0.7.jar:jmxetric-1.0.4.jar
	
    set -x
	echo "============ restart process !!!! ============" >> /opt/$PROJ_NAME/log/jmx_$PROJ_NAME.log
	echo java -Djava.util.logging.config.file=log4j.conf -cp $JARS -javaagent:jmxetric-1.0.4.jar=$config info.ganglia.jmxetric.JMXetricAgent >> /opt/$PROJ_NAME/log/jmx_service.log
    exec nohup java -Djava.util.logging.config.file=log4j.conf -cp $JARS -javaagent:jmxetric-1.0.4.jar=$config info.ganglia.jmxetric.JMXetricAgent > /opt/$PROJ_NAME/log/jmx_$PROJ_NAME.log 2>&1
    set +x
end script

post-start script
    PID=`ps -ef | grep jmxetric | egrep -v 'grep|nohup' | awk '{print $2}'`
    echo $PID > /opt/run/jmx_$PROJ_NAME.pid
end script

pre-start script
	if [ -f /opt/run/jmx_$PROJ_NAME.pid] ; then
        rm /opt/run/jmx_$PROJ_NAME.pid
    fi
    # Date format same as (new Date()).toISOString() for consistency
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Starting" >> /opt/$PROJ_NAME/log/jmx_$PROJ_NAME.log
end script

pre-stop script
    if [ -f /opt/run/jmx_$PROJ_NAME.pid] ; then
        rm /opt/run/jmx_$PROJ_NAME.pid
    fi
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Stopping" >> /opt/$PROJ_NAME/log/jmx_$PROJ_NAME.log
end script

