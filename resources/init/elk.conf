#!upstart
description "elasticsearch"
author      "Dewey Hong"

# used to be: start on startup
# until we found some mounts weren't ready yet while booting:
start on runlevel [2345]
stop on runlevel [016]

# Automatically Respawn:
respawn
respawn limit 99 5

#modify limits
limit nofile 64000 64000

env PROJ_NAME=elk

script
    ulimit -n 65000
    # Not sure why $HOME is needed, but it is:
    
	export ES_HEAP_SIZE=256m
	export ES_HEAP_NEWSIZE=128m
	export JAVA_OPT="-server -XX:+AggressiveOpts -XX:UseCompressedOops -XX:MaxDirectMemorySize -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseC MSInitiatingOccupancyOnly"
	ES=/home/vagrant/node1
	chown -Rf vagrant:vagrant $ES
	
    set -x
    mkdir -p $ES/log
	echo "============ restart process !!!! ============" >> $ES/log/$PROJ_NAME.log
	echo nohup $ES/bin/elasticsearch -Des.pidfile=$ES/bin/es.pid -Des.config=$ES/config/elasticsearch.yml -Djava.net.preferIPv4Stack=true -Des.max-open-files=true >> $ES/log/service.log
	exec nohup $ES/bin/elasticsearch -Des.pidfile=$ES/bin/es.pid -Des.config=$ES/config/elasticsearch.yml -Djava.net.preferIPv4Stack=true -Des.max-open-files=true > $ES/log/$PROJ_NAME.log 2>&1
    set +x
end script

post-start script
    PID=`ps -ef | grep elasticsearch | egrep -v 'grep|nohup' | awk '{print $2}'`
    echo $PID > $ES/$PROJ_NAME.pid
end script

pre-start script
	if [ -f $ES/$PROJ_NAME.pid] ; then
        rm $ES/$PROJ_NAME.pid
    fi
    # Date format same as (new Date()).toISOString() for consistency
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Starting" >> $ES/log/$PROJ_NAME.log
end script

pre-stop script
    if [ -f $ES/$PROJ_NAME.pid] ; then
        rm $ES/$PROJ_NAME.pid
    fi
    echo "[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Stopping" >> $ES/log/$PROJ_NAME.log
end script

