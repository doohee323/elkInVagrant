input {
  file {
      path => "/var/log/nginx/access.log"
      start_position => "beginning"
      codec => json
      type => "nginx"
  }
  file {
      path => "/opt/tomcat/logs/stats-*.log"
      start_position => "beginning"
      codec => json
      type => "stats"
  }
}
filter {
	if [type] == "nginx" {
	  grok {
	  	patterns_dir => "/etc/logstash/patterns"
	    match => { "message" => "%{NGINXACCESS}" }
	  }
	  date {
	    match => [ "time" , "dd/MMM/YYYY:HH:mm:ss Z" ]
	  }
	  geoip {
	    source => "remote_ip"
		target => "geoip"
		database => "/etc/logstash/GeoLite2-City.mmdb"
	    add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
	    add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]    
	  }  
	  mutate {
	  	convert => [ "[geoip][coordinates]", "float"]
	  }
	  mutate { 
	  	remove_field => [ "major", "minor", "os_majaor", "os_minor", "os_name", "patch" ] 
	  }
	  useragent {
	    source => "agent"
	  }
	}
	if [type] == "stats" {
		json{
		    source => "message"
		}
		geoip {
			source => "ip"
			target => "geoip"
			database => "/etc/logstash/GeoLite2-City.mmdb"
			add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
			add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]    
		}
		mutate {
			convert => [ "[geoip][coordinates]", "float"]
		}
	}
	if "ELB-HealthChecker" in [user-agent] { drop{ } }
	if "172.31." in [remote_ip] { drop{ } }
}
output {
	elasticsearch {
	    index => "%{type}"
	    document_type => "%{type}"
	    hosts => ["localhost:9200"]
	}
}
